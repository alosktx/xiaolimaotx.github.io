<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[这段奔跑视频看得我热血沸腾]]></title>
    <url>%2F2018%2F10%2F31%2F%E8%BF%99%E6%AE%B5%E5%A5%94%E8%B7%91%E8%A7%86%E9%A2%91%E7%9C%8B%E5%BE%97%E6%88%91%E7%83%AD%E8%A1%80%E6%B2%B8%E8%85%BE%2F</url>
    <content type="text"><![CDATA[这段奔跑视频看得我热血沸腾 美队，黑豹和冬兵]]></content>
  </entry>
  <entry>
    <title><![CDATA[阿里java编程命名规范]]></title>
    <url>%2F2018%2F03%2F17%2F%E9%98%BF%E9%87%8Cjava%E7%BC%96%E7%A8%8B%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[转载自 阿里巴巴java开发手册 提取密码：5r5u 【强制】代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。 反例： name / __name / $name / name / name$ / name__ 【强制】代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式也要避免采用。 正例： alibaba / taobao / youku / hangzhou 等国际通用的名称，可视同英文。 反例： DaZhePromotion [ 打折 ] / getPingfenByName() [ 评分 ] / int 某变量 = 3 【强制】类名使用 UpperCamelCase 风格，但以下情形例外： DO / BO / DTO / VO / AO /PO 等。 正例： MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion 反例： macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion 【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从驼峰形式。 正例： localValue / getHttpMessage() / inputUserId 【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。 正例： MAX STOCK COUNT 反例： MAX _ COUNT 【强制】抽象类命名使用 Abstract 或 Base 开头 ； 异常类命名使用Exception 结尾 ； 测试类命名以它要测试的类名开始，以 Test 结尾。 【强制】类型与中括号紧挨相连来定义数组。 正例：定义整形数组 int[] arrayDemo; 反例：在 main 参数中，使用 String args[]来定义。 【强制】 POJO 类中布尔类型的变量，都不要加 is 前缀 ，否则部分框架解析会引起序列化错误。 反例：定义为基本数据类型 Boolean isDeleted； 的属性，它的方法也是 isDeleted() ， RPC。 【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。 正例：应用工具类包名为 com . alibaba . ai . util 、类名为 MessageUtils（ 此规则参考 spring的框架结构 ） 【强制】杜绝完全不规范的缩写，避免望文不知义。反例： AbstractClass “缩写”命名成 AbsClass；condition “缩写”命名成 condi ，此类随意缩写严重降低了代码的可阅读性。 【推荐】为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词组合来表达其意。正例：从远程仓库拉取代码的类命名为 PullCodeFromRemoteRepository。反例：变量 int a; 的随意命名方式。 【推荐】如果模块、接口、类、方法使用了设计模式，在命名时体现出具体模式。说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。正例：public class OrderFactory;public class LoginProxy;public class ResourceObserver; 【推荐】接口类中的方法和属性不要加任何修饰符号 （public 也不要加 ） ，保持代码的简洁性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是与接口方法相关，并且是整个应用的基础常量。正例：接口方法签名 void f();接口基础常量 String COMPANY = “ alibaba “ ;反例：接口方法定义 public abstract void f();说明： JDK 8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默认实现。 接口和实现类的命名有两套规则：1 ） 【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部的实现类用 Impl 的后缀与接口区别。正例： CacheServiceImpl 实现 CacheService 接口。 2 ） 【推荐】 如果是形容能力的接口名称，取对应的形容词为接口名 （ 通常是– able 的形式 ） 。正例： AbstractTranslator 实现 Translatable 。 【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。正例：枚举名字为 ProcessStatusEnum 的 成员名称： SUCCESS / UNKNOWN _ REASON。 【参考】各层命名规约：A) Service / DAO 层方法命名规约1 ） 获取单个对象的方法用 get 作前缀。2 ） 获取多个对象的方法用 list 作前缀。3 ） 获取统计值的方法用 count 作前缀。4 ） 插入的方法用 save/insert 作前缀。5 ） 删除的方法用 remove/delete 作前缀。6 ） 修改的方法用 update 作前缀。B) 领域模型命名规约1 ） 数据对象： xxxDO ， xxx 即为数据表名。2 ） 数据传输对象： xxxDTO ， xxx 为业务领域相关的名称。3 ） 展示对象： xxxVO ， xxx 一般为网页名称。4 ） POJO 是 DO / DTO / BO / VO 的统称，禁止命名成 xxxPOJO]]></content>
      <categories>
        <category>IAVA</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>阿里</tag>
        <tag>转载</tag>
        <tag>命名</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇原创]]></title>
    <url>%2F2018%2F03%2F11%2Fqiaoqiao%2F</url>
    <content type="text"><![CDATA[第一篇原创博文，不知道写啥，就是试试一些功能，清楚一下MarkDown的一些语法这是MarkDown语法网址 Markdown入门语法 上学期快结束时就把博客搭建好了，然后寒假就一直没管它，这几天才开始重新布置，以后会添加更多内容(特效图片之类的)，目前整个界面还是有点丑的。 本打算在腾讯云买服务器和域名，后来我发现买国内的服务器和域名，要使用的话要备案，上传一些身份证明之类的，很麻烦，加之办事效率低，没有十天半个月是不行的，所以我果断放弃了。使用国外的服务器不用备案，但我英语差啊，跑到国外网站上去买，被骗了怎么办？ 抱着这样一种心态，我选择了用Github（没错，就是那个全球最大的同性交友网站）+hexo来搭建博客，优点是不要钱，流量和空间嘛，够用就行（试用了一下，我觉得还可以），域名是自动生成的（有点丑不过没事儿），本来买了一个域名，但是绑定出了点问题。在知乎上找了这篇教程 这是传送门，就搭建起来的，还挺简单，网页方面不需要使用html，用Markdown语言就行（就和自然语言差不多，有道云笔记支持编写）。 今天在上面发表了原创博文，添加了网易云音乐，本来想把名字改成中文的，但是它那个语言一直出问题，这个Hexo是一个中国台湾人发明的，无奈我只有使用繁体来展示出主页面的中文。这就是我要说的了。 最后，我想说，老子的地盘老子做主，去你的微博动态朋友圈，我想发多少字就发多少字，想换什么背景就换什么背景，想怎么设计页面就怎么设计页面，哈哈哈哈哈哈哈哈。]]></content>
      <categories>
        <category>关于博客</category>
      </categories>
      <tags>
        <tag>生活随笔</tag>
        <tag>不知道</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[系统博文]]></title>
    <url>%2F2018%2F01%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>不知道啊</category>
      </categories>
      <tags>
        <tag>不知道</tag>
      </tags>
  </entry>
</search>
