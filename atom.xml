<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tang&#39;s Blog</title>
  
  <subtitle>To be a better me</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaolimaotx.github.io/"/>
  <updated>2018-10-31T14:26:34.804Z</updated>
  <id>https://xiaolimaotx.github.io/</id>
  
  <author>
    <name>T-shirt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>这段奔跑视频看得我热血沸腾</title>
    <link href="https://xiaolimaotx.github.io/2018/10/31/%E8%BF%99%E6%AE%B5%E5%A5%94%E8%B7%91%E8%A7%86%E9%A2%91%E7%9C%8B%E5%BE%97%E6%88%91%E7%83%AD%E8%A1%80%E6%B2%B8%E8%85%BE/"/>
    <id>https://xiaolimaotx.github.io/2018/10/31/这段奔跑视频看得我热血沸腾/</id>
    <published>2018-10-31T12:51:42.000Z</published>
    <updated>2018-10-31T14:26:34.804Z</updated>
    
    <content type="html"><![CDATA[<p>这段奔跑视频看得我热血沸腾<br><a id="more"></a></p><p><a href="http://phaaflp9b.bkt.clouddn.com/%E6%BC%AB%E5%A8%81%E7%BE%8E%E9%98%9F%E3%80%81%E9%BB%91%E8%B1%B9%E3%80%81%E5%86%AC%E5%85%B5%E4%B8%89%E4%BA%BA%E6%AF%94%E9%80%9F%E5%BA%A6%EF%BC%8C%E6%B3%A8%E6%84%8F%E6%91%84%E5%83%8F%E6%9C%BA%E7%A7%BB%E5%8A%A8%E9%80%9F%E5%BA%A6%EF%BC%81%20-%20%E8%A7%86%E9%A2%91%20-%20%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90.mp4" target="_blank" rel="noopener">美队，黑豹和冬兵</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这段奔跑视频看得我热血沸腾&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>阿里java编程命名规范</title>
    <link href="https://xiaolimaotx.github.io/2018/03/17/%E9%98%BF%E9%87%8Cjava%E7%BC%96%E7%A8%8B%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    <id>https://xiaolimaotx.github.io/2018/03/17/阿里java编程命名规范/</id>
    <published>2018-03-17T12:14:55.000Z</published>
    <updated>2018-03-17T12:57:11.763Z</updated>
    
    <content type="html"><![CDATA[<p>  转载自  <a href="https://pan.baidu.com/s/1zV0myUQgTJRH2BC6cW88zw" target="_blank" rel="noopener">阿里巴巴java开发手册</a><br>  提取密码：5r5u</p><a id="more"></a><ol><li><p>【强制】代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。<br> 反例： <em>name / __name / $name / name</em> / name$ / name__</p></li><li><p>【强制】代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。<br>说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式<br>也要避免采用。<br> 正例： alibaba /  taobao /  youku /  hangzhou 等国际通用的名称，可视同英文。<br> 反例： DaZhePromotion [ 打折 ] /  getPingfenByName() [ 评分 ] /  int 某变量 = 3</p></li><li><p>【强制】类名使用 UpperCamelCase 风格，但以下情形例外： DO /  BO  /  DTO /  VO /  AO /<br>PO 等。<br> 正例： MarcoPolo /  UserDO /  XmlService /  TcpUdpDeal /  TaPromotion<br> 反例： macroPolo /  UserDo /  XMLService /  TCPUDPDeal /  TAPromotion</p></li><li><p>【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从<br>驼峰形式。<br> 正例：  localValue /  getHttpMessage() /  inputUserId</p></li><li><p>【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。<br> 正例： MAX <em> STOCK </em> COUNT<br> 反例： MAX _ COUNT</p></li><li><p>【强制】抽象类命名使用 Abstract 或 Base 开头 ； 异常类命名使用Exception 结尾 ； 测试类命名以它要测试的类名开始，以 Test 结尾。</p></li><li><p>【强制】类型与中括号紧挨相连来定义数组。<br> 正例：定义整形数组 int[] arrayDemo;<br> 反例：在 main 参数中，使用 String args[]来定义。</p></li><li><p>【强制】 POJO 类中布尔类型的变量，都不要加 is 前缀 ，否则部分框架解析会引起序列化错误。<br> 反例：定义为基本数据类型 Boolean isDeleted； 的属性，它的方法也是 isDeleted() ， RPC。</p></li><li><p>【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用<br>单数形式，但是类名如果有复数含义，类名可以使用复数形式。<br> 正例：应用工具类包名为 com . alibaba . ai . util 、类名为 MessageUtils（ 此规则参考 spring的框架结构 ）</p></li><li><p>【强制】杜绝完全不规范的缩写，避免望文不知义。<br>反例： AbstractClass “缩写”命名成 AbsClass；condition “缩写”命名成  condi ，此类随意缩写严重降低了代码的可阅读性。</p></li><li><p>【推荐】为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词<br>组合来表达其意。<br>正例：从远程仓库拉取代码的类命名为 PullCodeFromRemoteRepository。<br>反例：变量 int a; 的随意命名方式。</p></li><li><p>【推荐】如果模块、接口、类、方法使用了设计模式，在命名时体现出具体模式。<br>说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。<br>正例：<br>public class OrderFactory;<br>public class LoginProxy;<br>public class ResourceObserver;</p></li><li><p>【推荐】接口类中的方法和属性不要加任何修饰符号 （public 也不要加 ） ，保持代码的简洁<br>性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是<br>与接口方法相关，并且是整个应用的基础常量。<br>正例：接口方法签名 void f();<br>接口基础常量 String COMPANY = “ alibaba “ ;<br>反例：接口方法定义 public abstract void f();<br>说明： JDK 8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默<br>认实现。</p></li><li><p>接口和实现类的命名有两套规则：<br>1 ） 【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部<br>的实现类用 Impl 的后缀与接口区别。<br>正例： CacheServiceImpl 实现 CacheService 接口。</p></li></ol><p>2 ）  【推荐】 如果是形容能力的接口名称，取对应的形容词为接口名 （ 通常是– able 的形式 ） 。<br>正例： AbstractTranslator 实现  Translatable 。</p><ol><li><p>【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。<br>说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。<br>正例：枚举名字为 ProcessStatusEnum 的 成员名称： SUCCESS /  UNKNOWN _ REASON。</p></li><li><p>【参考】各层命名规约：<br>A) Service / DAO 层方法命名规约<br>1 ） 获取单个对象的方法用 get 作前缀。<br>2 ） 获取多个对象的方法用 list 作前缀。<br>3 ） 获取统计值的方法用 count 作前缀。<br>4 ） 插入的方法用 save/insert 作前缀。<br>5 ） 删除的方法用 remove/delete 作前缀。<br>6 ） 修改的方法用 update 作前缀。<br>B) 领域模型命名规约<br>1 ） 数据对象： xxxDO ， xxx 即为数据表名。<br>2 ） 数据传输对象： xxxDTO ， xxx 为业务领域相关的名称。<br>3 ） 展示对象： xxxVO ， xxx 一般为网页名称。<br>4 ） POJO 是 DO / DTO / BO / VO 的统称，禁止命名成 xxxPOJO </p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  转载自  &lt;a href=&quot;https://pan.baidu.com/s/1zV0myUQgTJRH2BC6cW88zw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿里巴巴java开发手册&lt;/a&gt;&lt;br&gt;  提取密码：5r5u&lt;/p&gt;
    
    </summary>
    
      <category term="IAVA" scheme="https://xiaolimaotx.github.io/categories/IAVA/"/>
    
    
      <category term="java" scheme="https://xiaolimaotx.github.io/tags/java/"/>
    
      <category term="阿里" scheme="https://xiaolimaotx.github.io/tags/%E9%98%BF%E9%87%8C/"/>
    
      <category term="转载" scheme="https://xiaolimaotx.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="命名" scheme="https://xiaolimaotx.github.io/tags/%E5%91%BD%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>第一篇原创</title>
    <link href="https://xiaolimaotx.github.io/2018/03/11/qiaoqiao/"/>
    <id>https://xiaolimaotx.github.io/2018/03/11/qiaoqiao/</id>
    <published>2018-03-11T08:32:50.561Z</published>
    <updated>2018-10-27T03:52:27.429Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第一篇原创博文，不知道写啥，就是试试一些功能，清楚一下MarkDown的一些语法<br>这是MarkDown语法网址 <a href="https://www.appinn.com/markdown/basic.html" target="_blank" rel="noopener">Markdown入门语法</a></p></blockquote><a id="more"></a><blockquote><p>上学期快结束时就把博客搭建好了，然后寒假就一直没管它，这几天才开始重新布置，以后会添加更多内容(特效图片之类的)，目前整个界面还是有点丑的。</p><p>本打算在腾讯云买服务器和域名，后来我发现买国内的服务器和域名，要使用的话要备案，上传一些身份证明之类的，很麻烦，加之办事效率低，没有十天半个月是不行的，所以我果断放弃了。使用国外的服务器不用备案，但我英语差啊，跑到国外网站上去买，被骗了怎么办？</p><p>抱着这样一种心态，我选择了用Github（没错，就是那个全球最大的同性交友网站）+hexo来搭建博客，优点是不要钱，流量和空间嘛，够用就行（试用了一下，我觉得还可以），域名是自动生成的（有点丑不过没事儿），本来买了一个域名，但是绑定出了点问题。在知乎上找了这篇教程 <a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">这是传送门</a>，就搭建起来的，还挺简单，网页方面不需要使用html，用Markdown语言就行（就和自然语言差不多，有道云笔记支持编写）。</p><p>今天在上面发表了原创博文，添加了网易云音乐，本来想把名字改成中文的，但是它那个语言一直出问题，这个Hexo是一个中国台湾人发明的，无奈我只有使用繁体来展示出主页面的中文。这就是我要说的了。</p><p>最后，我想说，老子的地盘老子做主，去你的微博动态朋友圈，我想发多少字就发多少字，想换什么背景就换什么背景，想怎么设计页面就怎么设计页面，哈哈哈哈哈哈哈哈。</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第一篇原创博文，不知道写啥，就是试试一些功能，清楚一下MarkDown的一些语法&lt;br&gt;这是MarkDown语法网址 &lt;a href=&quot;https://www.appinn.com/markdown/basic.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Markdown入门语法&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="关于博客" scheme="https://xiaolimaotx.github.io/categories/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="不知道" scheme="https://xiaolimaotx.github.io/tags/%E4%B8%8D%E7%9F%A5%E9%81%93/"/>
    
      <category term="生活随笔" scheme="https://xiaolimaotx.github.io/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>系统博文</title>
    <link href="https://xiaolimaotx.github.io/2018/01/04/hello-world/"/>
    <id>https://xiaolimaotx.github.io/2018/01/04/hello-world/</id>
    <published>2018-01-04T12:59:06.660Z</published>
    <updated>2018-03-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="不知道啊" scheme="https://xiaolimaotx.github.io/categories/%E4%B8%8D%E7%9F%A5%E9%81%93%E5%95%8A/"/>
    
    
      <category term="不知道" scheme="https://xiaolimaotx.github.io/tags/%E4%B8%8D%E7%9F%A5%E9%81%93/"/>
    
  </entry>
  
</feed>
